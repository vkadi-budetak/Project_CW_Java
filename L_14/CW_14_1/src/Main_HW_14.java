import java.util.LinkedHashMap;
import java.util.Map;

public class Main_HW_14 {
    public static void main(String[] args) {
        String[] names = {"byte", "short", "int", "long", "char",
                "float", "double"};

        String[] minValues = {String.valueOf(Byte.MIN_VALUE),
                String.valueOf(Short.MIN_VALUE),
                String.valueOf(Integer.MIN_VALUE),
                String.valueOf(Long.MIN_VALUE),
                String.valueOf((int) Character.MIN_VALUE),
                String.valueOf(Float.MIN_VALUE),
                String.valueOf(Double.MIN_VALUE)};

        String[] maxValues = {String.valueOf(Byte.MAX_VALUE),
                String.valueOf(Short.MAX_VALUE),
                String.valueOf(Integer.MAX_VALUE),
                String.valueOf(Long.MAX_VALUE),
                String.valueOf((int) Character.MAX_VALUE),
                String.valueOf(Float.MAX_VALUE),
                String.valueOf(Double.MAX_VALUE)};

        if (args.length == 0) args = names;

        System.out.println("Data type:\t\t\tMin Value:\t\tMax value:");
        for (int i = 0; i < args.length; i++) {
            boolean found = false;
            for (int j = 0; j < names.length; j++) {
                if (args[i].equals(names[j])) {
                    System.out.printf("%s \t\t %s \t\t  %s  \n",
                            names[j], minValues[j], maxValues[j]);
                    found = true;
                    break;
                }
            }
            if (!found)
                System.out.println("Wrong data type name: " + args[i]);
        }
    }
}

// -> More Run/Debug -> Modify Run Configuration

       /*
      4.
        # –ú–∏–Ω/–º–∞–∫—Å –∑–Ω–∞—á–µ–Ω–∏–π –±–µ–∑ switch/case –∏ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –ø–æ if

        ## üßµ –ó–∞–¥–∞–Ω–∏–µ
        –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–µ—á–∞—Ç–∞–µ—Ç **–º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ** –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏–º–∏—Ç–∏–≤–Ω—ã—Ö —Ç–∏–ø–æ–≤,
—É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `main`.
–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `switch/case`. –†–∞–∑—Ä–µ—à–µ–Ω–æ –Ω–µ –±–æ–ª–µ–µ **—Ç—Ä—ë—Ö** –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ `if`.
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–∏–ø—ã: `byte`, `short`, `int`, `long`, `char`, `float`, `double`.
–ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –Ω–µ—Ç ‚Äî –≤—ã–≤–µ–¥–∏—Ç–µ —Å–≤–µ–¥–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ç–∏–ø–æ–≤. –î–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ
—Ç–∏–ø–∞ –≤—ã–≤–µ–¥–∏—Ç–µ `<–∞—Ä–≥—É–º–µ–Ω—Ç> Wrong type`.

        */
