import java.util.Arrays;

public class Main_HW_18_1 {
    public static void main(String[] args) {
        System.out.println("=======1=======");
        int[] ar = {1, 5, 9, 4, 8, 0, 3, 1};
        System.out.println(Arrays.toString(ar));
        int total = sum(ar);
        System.out.println(total);

        System.out.println("=======2=======");
        boolean[] arrBool = {true, false, true, true, false, false, true};
        System.out.println(Arrays.toString(arrBool));
        int totalTrue = count(arrBool);
        System.out.println(totalTrue);

        System.out.println("=======3=======");
        String[] arrString = {"–û–ª—è", "–í–∏–∫—Ç–æ—Ä", "–ù–∞—Å—Ç—è", "–û–ª–µ–≥", "–ö–∞—Ç—è", "–î—ñ–º–∞"};
        System.out.println(Arrays.toString(arrString));
        String arrPrintString = print(arrString);
        System.out.println(arrPrintString);

        System.out.println("=======4=======");
        String[] arrString1 = {"–û–ª—è", "–í–∏–∫—Ç–æ—Ä", "–ù–∞—Å—Ç—è", "–û–ª–µ–≥", "–ö–∞—Ç—è", "–î—ñ–º–∞"};
        System.out.println(Arrays.toString(arrString1));
        String arrPrintString1 = printComma(arrString1);
        System.out.println(arrPrintString1);

        System.out.println("=======5=======");
        int[] arr = {1, 5, 9, 4, 8, 0, 3, 1, 2};
        System.out.println(Arrays.toString(arr));
        System.out.println(sumOddIndex(arr));

        System.out.println("=======6=======");
        int[] arr1 = {1, 50, 9, 4, 8, 0, 3, 1, 2};
        ;
        System.out.println(Arrays.toString(arr1));
        System.out.println(maxArray(arr1));

        System.out.println("=======7=======");
        int[] arr2 = {1, 50, 9, 4, 8, 0, 3, 1, 2};
        ;
        System.out.println(Arrays.toString(arr1));
        System.out.println(avgArray(arr2));




    }

    private static double avgArray(int[] arr2) {
        int sum = 0;
        for (int i = 0; i < arr2.length; i++) {
            sum += arr2[i];
        }
        return (double) sum / arr2.length; // –∞–±–æ 1.0* sum/ar.length
//        return 1.0 * sum / arr2.length;
//        return (sum + 0.0) / arr2.length;
//        return sum / arr2.length; //Error —Ç–µ—Ä—è–µ–º –¥—Ä–æ–±–Ω—É—é —á–∞—Å—Ç—å –∏–∑-–∑–∞ —Ü–µ–ª–æ—á–∏—Å–µ–ª—å–Ω–æ–≥–æ


    }

private static int maxArray(int[] arr1) {
    int max = arr1[0];

    for (int i = 1; i < arr1.length; i++) {
        if (arr1[i] > max) {
            max = arr1[i];
        }
    }
    return max;
}

private static int sumOddIndex(int[] ar) {
    int sum = 0;
    for (int i = 0; i < ar.length; i++) {
        if (i % 2 == 1) {
            sum += ar[i];
        }
    }
    return sum;
}

private static String printComma(String[] ar) {
    if (ar == null || ar.length == 0) return "";
    String s = "";
    for (int i = ar.length - 1; i >= 0; i--) {
        s = s + ar[i];
        if (i > 0) {
            s = s + ",";
        }
    }
    return s;
}

private static String print(String[] ar) {
    if (ar == null || ar.length == 0) return "";
    String s = "";
    for (int i = ar.length - 1; i >= 0; i--) {
        s = s + ar[i] + ", ";
    }
    return s;
}

private static int count(boolean[] arrBool) {
    int res = 0;
    for (boolean i : arrBool) {
        if (i)
            res += 1;     // res ++
    }
    return res;
}

private static int sum(int[] ar) {
    int res = 0;
    for (int i = 0; i < ar.length; i++) {
        res += ar[i];
    }
    return res;
}
}

/*
1 (15)
# –ú–∞—Å—Å–∏–≤—ã: —Å—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ int[]

## üßÆ –ó–∞–¥–∞–Ω–∏–µ
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ `sum(int[] ar)`, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É –≤—Å–µ—Ö
—ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ `int[]`. –ü–æ–∫–∞–∂–∏—Ç–µ —Ä–∞–±–æ—Ç—É –º–µ—Ç–æ–¥–∞ –≤ `main`.

2 (16)
# –ú–∞—Å—Å–∏–≤—ã: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ true –≤ boolean[]

## üßÆ –ó–∞–¥–∞–Ω–∏–µ
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ `count(boolean[] ar)`, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
—ç–ª–µ–º–µ–Ω—Ç–æ–≤ `true` –≤ –º–∞—Å—Å–∏–≤–µ `boolean[]`. –ü–æ–∫–∞–∂–∏—Ç–µ —Ä–∞–±–æ—Ç—É –º–µ—Ç–æ–¥–∞ –≤ `main`.

3 (17)
# –ú–∞—Å—Å–∏–≤—ã: –ø–µ—á–∞—Ç—å –∏–º—ë–Ω –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (—Å –∑–∞–ø—è—Ç–æ–π –≤ –∫–æ–Ω—Ü–µ)

## üßÆ –ó–∞–¥–∞–Ω–∏–µ
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ `print(String[] ar)`, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—á–∞—Ç–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞
—Å—Ç—Ä–æ–∫ **–≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ** —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏ –∑–∞–ø—è—Ç—É—é –≤ –∫–æ–Ω—Ü–µ.
–ü–æ–∫–∞–∂–∏—Ç–µ —Ä–∞–±–æ—Ç—É –º–µ—Ç–æ–¥–∞ –≤ `main`.

4 (18)
# –ú–∞—Å—Å–∏–≤—ã: –ø–µ—á–∞—Ç—å –∏–º—ë–Ω –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –±–µ–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø—è—Ç–æ–π

## üßÆ –ó–∞–¥–∞–Ω–∏–µ
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ `print(String[] ar)`, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—á–∞—Ç–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞
—Å—Ç—Ä–æ–∫ **–≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ** —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é **–±–µ–∑** –∑–∞–ø—è—Ç–æ–π –≤ –∫–æ–Ω—Ü–µ.
–ü–æ–∫–∞–∂–∏—Ç–µ —Ä–∞–±–æ—Ç—É –º–µ—Ç–æ–¥–∞ –≤ `main`.

5(19)

# –ú–∞—Å—Å–∏–≤—ã: —Å—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –Ω–µ—á—ë—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏

## üßÆ –ó–∞–¥–∞–Ω–∏–µ
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ `sumOddIndex(int[] ar)`, –∫–æ—Ç–æ—Ä—ã–π —Å—É–º–º–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã
–º–∞—Å—Å–∏–≤–∞ —Å –Ω–µ—á—ë—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏ (1,3,5,...). –ü–æ–∫–∞–∂–∏—Ç–µ —Ä–∞–±–æ—Ç—É –º–µ—Ç–æ–¥–∞ –≤ `main`.

6(20)

# –ú–µ—Ç–æ–¥—ã: –º–∞–∫—Å–∏–º—É–º –≤ –º–∞—Å—Å–∏–≤–µ int[]

## üß© –ó–∞–¥–∞–Ω–∏–µ
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ `maxArray(int[] ar)`, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
–º–∞—Å—Å–∏–≤–∞. –ü–æ–∫–∞–∂–∏—Ç–µ —Ä–∞–±–æ—Ç—É –º–µ—Ç–æ–¥–∞ –≤ `main`.

7(21)

# –ú–µ—Ç–æ–¥—ã: —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ int[] (double)

## üß© –ó–∞–¥–∞–Ω–∏–µ
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ `avgArray(int[] ar)`, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
—ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ –≤ –≤–∏–¥–µ `double`. –ü–æ–∫–∞–∂–∏—Ç–µ —Ä–∞–±–æ—Ç—É –≤ `main`.
 */