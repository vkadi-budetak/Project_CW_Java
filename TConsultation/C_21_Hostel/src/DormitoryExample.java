import java.util.Collections;
import java.util.Comparator;
import java.util.List;

/**
 * –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–û–ù–ù–´–ô –ö–õ–ê–°–° –°–ò–°–¢–ï–ú–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –û–ë–©–ï–ñ–ò–¢–ò–ï–ú
 *
 * –≠—Ç–æ—Ç –∫–ª–∞—Å—Å —Å–ª—É–∂–∏—Ç –ø—Ä–∏–º–µ—Ä–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
 * —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–º –æ–±—â–µ–∂–∏—Ç–∏–µ–º –∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –û–û–ü –≤ –¥–µ–π—Å—Ç–≤–∏–∏.
 *
 * –î–ï–ú–û–ù–°–¢–†–ò–†–£–ï–ú–´–ï –ö–û–ù–¶–ï–ü–¶–ò–ò –û–û–ü:
 * - –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ: Student, DormLeader, DormManager –Ω–∞—Å–ª–µ–¥—É—é—Ç –æ—Ç Person
 * - –ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º: —Ä–∞–∑–Ω—ã–µ –∫–ª–∞—Å—Å—ã —Ä–µ–∞–ª–∏–∑—É—é—Ç –º–µ—Ç–æ–¥—ã –ø–æ-—Å–≤–æ–µ–º—É
 * - –ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è: –¥–∞–Ω–Ω—ã–µ —Å–∫—Ä—ã—Ç—ã –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–æ–≤, –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥—ã
 * - –ê–±—Å—Ç—Ä–∞–∫—Ü–∏—è: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –∏ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
 * - –ö–æ–º–ø–æ–∑–∏—Ü–∏—è: DormitoryManagementSystem —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤
 *
 * –î–ï–ú–û–ù–°–¢–†–ò–†–£–ï–ú–´–ï –°–¢–†–£–ö–¢–£–†–´ –î–ê–ù–ù–´–•:
 * - ArrayList: –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∂–∏–ª—å—Ü–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
 * - HashSet: –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∫–æ–º–Ω–∞—Ç–∞–º–∏
 * - LinkedList: –¥–ª—è –æ—á–µ—Ä–µ–¥–∏ –∑–∞—è–≤–æ–∫ –Ω–∞ —Ä–µ–º–æ–Ω—Ç
 * - Comparator: –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –æ–±—ä–µ–∫—Ç–æ–≤
 *
 * –ü–ê–¢–¢–ï–†–ù–´ –ü–†–û–ï–ö–¢–ò–†–û–í–ê–ù–ò–Ø:
 * - Strategy: —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
 * - Iterator: –æ–±—Ö–æ–¥ –∫–æ–ª–ª–µ–∫—Ü–∏–π
 * - Factory Method: —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
 *
 * –û–ë–†–ê–ó–û–í–ê–¢–ï–õ–¨–ù–´–ï –¶–ï–õ–ò:
 * - –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –û–û–ü
 * - –ü—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏ Java
 * - –û–±—ä—è—Å–Ω–∏—Ç—å –ø—Ä–∏–Ω—Ü–∏–ø—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º
 * - –ù–∞—É—á–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º–∞ –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
 *
 * @author Sergiy Danylko
 * @version 1.0
 * @since 2025
 */
public class DormitoryExample {
    /**
     * –ì–õ–ê–í–ù–´–ô –ú–ï–¢–û–î –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò
     *
     * –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π –∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç—ã —Å —Å–∏—Å—Ç–µ–º–æ–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
     * –æ–±—â–µ–∂–∏—Ç–∏–µ–º, –ø–æ–∫–∞–∑—ã–≤–∞—è –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã –û–û–ü.
     *
     * –≠–¢–ê–ü–´ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò:
     * 1. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ –æ–±—ä–µ–∫—Ç–æ–≤ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
     * 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–æ–≤
     * 3. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º—É
     * 4. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º–∞
     * 5. –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
     * 6. –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö
     * 7. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏
     * 8. –†–∞–±–æ—Ç–∞ —Å —Ä–∞—Å—Ö–æ–¥–∞–º–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
     *
     * @param args –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è)
     */
    public static void main(String[] args) {
        System.out.println("üè† === –°–ò–°–¢–ï–ú–ê –£–ü–†–ê–í–õ–ï–ù–ò–Ø –°–¢–£–î–ï–ù–ß–ï–°–ö–ò–ú –û–ë–©–ï–ñ–ò–¢–ò–ï–ú ===");

        // –≠–¢–ê–ü 1: –°–û–ó–î–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø
        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∏–Ω—Å—Ç–∞–Ω—Ü–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ —Å–∏—Å—Ç–µ–º—ã
        DormitoryManagementSystem dorm = new DormitoryManagementSystem();

        // –≠–¢–ê–ü 2: –°–û–ó–î–ê–ù–ò–ï –ñ–ò–õ–¨–¶–û–í –†–ê–ó–ù–´–• –¢–ò–ü–û–í
        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ - –≤—Å–µ –∫–ª–∞—Å—Å—ã –Ω–∞—Å–ª–µ–¥—É—é—Ç –æ—Ç Person
        Student alice = new Student("–ê–ª–∏—Å–∞", 19, "+380-96-123-45-67", "–ö–ü–ò", 2);
        Student bob = new Student("–ë–æ–±", 20, "+380-96-234-56-78", "–ö–ü–ò", 3);
        DormLeader charlie = new DormLeader("–ß–∞—Ä–ª–∏", 21, "+380-93-345-67-89", "–ö–ü–ò", 3);
        Student diana = new Student("–î–∏–∞–Ω–∞", 18, "+380-99-456-78-90", "–ö–ü–ò", 1);
        DormManager manager = new DormManager("–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–Ω–∞", 45, "+380-95-567-89-01", 15);

        // –≠–¢–ê–ü 3: –ù–ê–°–¢–†–û–ô–ö–ê –°–ü–ï–¶–ò–§–ò–ß–ï–°–ö–ò–• –°–í–û–ô–°–¢–í
        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—é - –∫–∞–∂–¥—ã–π –∫–ª–∞—Å—Å –∏–º–µ–µ—Ç —Å–≤–æ–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
        alice.addResponsibleArea("–ö—É—Ö–Ω—è");
        bob.addResponsibleArea("–ö–æ—Ä–∏–¥–æ—Ä");
        diana.addResponsibleArea("–í–∞–Ω–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞");

        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
        charlie.addExpertSubject("–§–∏–∑–∏–∫–∞");
        charlie.addExpertSubject("–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫");

        // –≠–¢–ê–ü 4: –î–û–ë–ê–í–õ–ï–ù–ò–ï –ñ–ò–õ–¨–¶–û–í –í –°–ò–°–¢–ï–ú–£
        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º - –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∫–∞–∫ Person
        dorm.addResident(alice);
        dorm.addResident(bob);
        dorm.addResident(charlie);
        dorm.addResident(diana);
        dorm.addResident(manager);

        // –≠–¢–ê–ü 5: –£–ü–†–ê–í–õ–ï–ù–ò–ï –†–ï–°–£–†–°–ê–ú–ò
        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Å–∏—Å—Ç–µ–º—ã
        System.out.println("\nüè† === –ó–ê–°–ï–õ–ï–ù–ò–ï –í –ö–û–ú–ù–ê–¢–´ ===");
        for (Person person : dorm.getResidents()) {
            dorm.assignRoom(person);
        }

        // –≠–¢–ê–ü 6: –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–û–õ–ò–ú–û–†–§–ò–ó–ú–ê
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ —Ä–∞–∑–Ω—ã–µ –∫–ª–∞—Å—Å—ã —Ä–µ–∞–ª–∏–∑—É—é—Ç –æ–¥–∏–Ω –º–µ—Ç–æ–¥ –ø–æ-—Ä–∞–∑–Ω–æ–º—É
        System.out.println("\nüëã === –ó–ù–ê–ö–û–ú–°–¢–í–û (–ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º) ===");
        dorm.makeAllIntroduce();

        // –≠–¢–ê–ü 7: –ü–û–ò–°–ö –ò –§–ò–õ–¨–¢–†–ê–¶–ò–Ø –î–ê–ù–ù–´–•
        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∞–ª–≥–æ—Ä–∏—Ç–º—ã –ø–æ–∏—Å–∫–∞ –∏ —Ä–∞–±–æ—Ç—É —Å —É—Å–ª–æ–≤–∏—è–º–∏
        System.out.println("\nüîç === –ü–û–ò–°–ö –ú–û–õ–û–î–´–• –ñ–ò–õ–¨–¶–û–í (–¥–æ 20 –ª–µ—Ç) ===");
        List<Person> youngResidents = dorm.findYoungResidents(20);
        for (Person young : youngResidents) {
            System.out.println("–ú–æ–ª–æ–¥–æ–π –∂–∏–ª–µ—Ü: " + young.getName() + " (" + young.getAge() + " –ª–µ—Ç)");
        }

        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–∏–ø–æ–≤ –∏ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–æ–≤
        System.out.println("\nüéì === –ü–û–ò–°–ö –°–¢–£–î–ï–ù–¢–û–í 3 –ö–£–†–°–ê ===");
        List<Student> thirdYearStudents = dorm.findStudentsByCourse(3);
        for (Student student : thirdYearStudents) {
            System.out.println("–°—Ç—É–¥–µ–Ω—Ç 3 –∫—É—Ä—Å–∞: " + student.getName() + " - " + student.getUniversity());
        }

        // –≠–¢–ê–ü 8: –ü–†–ï–û–ë–†–ê–ó–û–í–ê–ù–ò–ï –ò –ê–ù–ê–õ–ò–ó –î–ê–ù–ù–´–•
        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        System.out.println("\nüìù === –°–ü–ò–°–û–ö –ö–û–ù–¢–ê–ö–¢–û–í ===");
        List<String> contacts = dorm.getContactList();
        for (String contact : contacts) {
            System.out.println("üìû " + contact);
        }

        // –≠–¢–ê–ü 9: –°–û–†–¢–ò–†–û–í–ö–ê –ò –£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–û–õ–õ–ï–ö–¶–ò–Ø–ú–ò
        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –æ–±—ä–µ–∫—Ç–æ–≤
        System.out.println("\nüìä === –°–û–†–¢–ò–†–û–í–ö–ê –ü–û –ò–ú–ï–ù–ò (Comparable) ===");
        dorm.sortResidents(null); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—É—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É (Comparable)
        dorm.showAllResidentsWithIterator();

        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Comparator –¥–ª—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
        System.out.println("\nüìä === –°–û–†–¢–ò–†–û–í–ö–ê –ü–û –í–û–ó–†–ê–°–¢–£ (Comparator) ===");
        dorm.sortResidents(Comparator.comparingInt(Person::getAge));
        for (Person person : dorm.getResidents()) {
            System.out.println(person.getName() + " - " + person.getAge() + " –ª–µ—Ç");
        }

        // –≠–¢–ê–ü 10: –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ò–ù–¢–ï–†–§–ï–ô–°–û–í –ü–û–í–ï–î–ï–ù–ò–Ø
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–æ–±–∞–≤–ª—è—é—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –æ–±—ä–µ–∫—Ç–∞–º
        System.out.println("\nüç≥ === –ì–û–¢–û–í–ö–ê (–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Cookable) ===");
        for (Person person : dorm.getResidents()) {
            if (person instanceof Cookable) {
                Cookable cook = (Cookable) person;
                cook.cook("–ü–∞—Å—Ç–∞");
                System.out.println("–õ—é–±–∏–º—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã " + person.getName() + ": " + cook.getFavoriteRecipes());
            }
        }

        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
        System.out.println("\nüßπ === –£–ë–û–†–ö–ê (–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Cleanable) ===");
        for (Person person : dorm.getResidents()) {
            if (person instanceof Cleanable) {
                Cleanable cleaner = (Cleanable) person;
                cleaner.clean("–ö—É—Ö–Ω—è");
            }
        }

        // –≠–¢–ê–ü 11: –ö–û–û–†–î–ò–ù–ê–¶–ò–Ø –ì–†–£–ü–ü–û–í–´–• –î–ï–ô–°–¢–í–ò–ô
        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–∏–º–æ—Ä—Ñ–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
        dorm.organizeEventByAllOrganizers("–ù–æ–≤–æ–≥–æ–¥–Ω—è—è –≤–µ—á–µ—Ä–∏–Ω–∫–∞");

        // –≠–¢–ê–ü 12: –°–ò–°–¢–ï–ú–ê –ü–û–ú–û–©–ò –í –û–ë–£–ß–ï–ù–ò–ò
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
        System.out.println("\nüìö === –ü–û–ú–û–©–¨ –° –£–ß–ï–ë–û–ô ===");
        for (Person person : dorm.getResidents()) {
            if (person instanceof StudyHelper) {
                StudyHelper helper = (StudyHelper) person;
                helper.helpWithSubject("–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞");
                helper.helpWithSubject("–ò—Å—Ç–æ—Ä–∏—è");
                System.out.println("–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã " + person.getName() + ": " + helper.getExpertSubjects());
            }
        }

        // –≠–¢–ê–ü 13: –§–ò–ù–ê–ù–°–û–í–û–ï –£–ü–†–ê–í–õ–ï–ù–ò–ï
        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ Expense –∏ –∏—Ö —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É
        System.out.println("\nüí∞ === –£–ü–†–ê–í–õ–ï–ù–ò–ï –†–ê–°–•–û–î–ê–ú–ò ===");
        dorm.addExpense("–ú–æ—é—â–∏–µ —Å—Ä–µ–¥—Å—Ç–≤–∞", 500.0, "–•–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã–µ");
        dorm.addExpense("–†–µ–º–æ–Ω—Ç —Å—Ç–∏—Ä–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω—ã", 2500.0, "–¢–µ—Ö–Ω–∏–∫–∞");
        dorm.addExpense("–ü—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", 1200.0, "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è");
        dorm.addExpense("–¢—É–∞–ª–µ—Ç–Ω–∞—è –±—É–º–∞–≥–∞", 300.0, "–•–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã–µ");
        dorm.addExpense("–ù–æ–≤—ã–π —Ç–µ–ª–µ–≤–∏–∑–æ—Ä", 15000.0, "–¢–µ—Ö–Ω–∏–∫–∞");

        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Comparable –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
        List<Expense> sortedExpenses = dorm.getExpenses();
        Collections.sort(sortedExpenses);

        System.out.println("–†–∞—Å—Ö–æ–¥—ã (–æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ —É–±—ã–≤–∞–Ω–∏—é —Å—É–º–º—ã):");
        for (Expense expense : sortedExpenses) {
            System.out.println("üí∏ " + expense);
        }

        // –≠–¢–ê–ü 14: –ê–ù–ê–õ–ò–ó –ò –§–ò–õ–¨–¢–†–ê–¶–ò–Ø –†–ê–°–•–û–î–û–í
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥—ã –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        System.out.println("\n–•–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã:");
        List<Expense> householdExpenses = dorm.getExpensesByCategory("–•–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã–µ");
        for (Expense expense : householdExpenses) {
            System.out.println("üßΩ " + expense);
        }

        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ —á–∏—Å–ª–æ–≤—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º
        System.out.println("\n–î–æ—Ä–æ–≥–∏–µ –ø–æ–∫—É–ø–∫–∏ (—Å–≤—ã—à–µ 1000 –≥—Ä–Ω.):");
        List<Expense> expensiveItems = dorm.getMostExpensiveItems(1000.0);
        for (Expense expense : expensiveItems) {
            System.out.println("üí∞ " + expense);
        }

        // –≠–¢–ê–ü 15: –£–ü–†–ê–í–õ–ï–ù–ò–ï –û–ß–ï–†–ï–î–¨–Æ –ó–ê–î–ê–ß
        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å Queue (FIFO - First In, First Out)
        System.out.println("\nüîß === –ó–ê–Ø–í–ö–ò –ù–ê –†–ï–ú–û–ù–¢ (Queue) ===");
        dorm.addMaintenanceRequest("–ü–æ—á–∏–Ω–∏—Ç—å –∫—Ä–∞–Ω –≤ –∫–æ–º–Ω–∞—Ç–µ 105");
        dorm.addMaintenanceRequest("–ó–∞–º–µ–Ω–∏—Ç—å –ª–∞–º–ø–æ—á–∫—É –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ");
        dorm.addMaintenanceRequest("–û—Ç—Ä–µ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–≤–µ—Ä—å –≤ –∫–æ–º–Ω–∞—Ç–µ 112");

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø FIFO –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–æ–∫
        System.out.println("\n–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—è–≤–æ–∫:");
        dorm.processMaintenanceRequest();
        dorm.processMaintenanceRequest();

        // –≠–¢–ê–ü 16: –ò–¢–û–ì–û–í–ê–Ø –ê–ù–ê–õ–ò–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´
        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Å–±–æ—Ä –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        dorm.showStatistics();

        System.out.println("\nüéâ === –ö–û–ù–ï–¶ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò ===");
    }
}
