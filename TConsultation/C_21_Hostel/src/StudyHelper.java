import java.util.List;

/**
 * Интерфейс StudyHelper определяет контракт для объектов, которые могут помогать с учебой.
 * Этот интерфейс демонстрирует принцип абстракции в ООП - мы определяем "что" должно быть сделано,
 * но не "как" это должно быть реализовано.
 *
 * Применение: старшекурсники или лидеры общежития могут помогать младшим студентам с учебными предметами.
 * Каждый помощник может специализироваться на определенных предметах.
 *
 * @author Sergiy Danylko
 * @version 1.0
 */
public interface StudyHelper {

    /**
     * Предоставляет помощь по указанному учебному предмету.
     * Метод должен быть реализован для оказания конкретной помощи студенту.
     *
     * @param subject название учебного предмета (например, "Математика", "Программирование", "Физика")
     */
    void helpWithSubject(String subject);

    /**
     * Возвращает список предметов, по которым данный помощник может оказать экспертную помощь.
     * Позволяет определить специализацию каждого помощника и найти подходящего эксперта.
     *
     * @return список строк с названиями предметов, в которых помощник является экспертом
     */
    List<String> getExpertSubjects();
}
