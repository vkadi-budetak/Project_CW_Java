import java.util.List;

/**
 * Интерфейс StudentEventOrganizer определяет контракт для организаторов студенческих мероприятий.
 * Этот интерфейс демонстрирует использование констант в интерфейсах и принцип единой ответственности.
 *
 * Применение: лидеры общежития и управляющие могут организовывать различные мероприятия для студентов,
 * такие как вечеринки, учебные сессии, спортивные соревнования и культурные события.
 *
 * @author Sergiy Danylko
 * @version 1.0
 */
public interface StudentEventOrganizer {

    /**
     * Константа, определяющая время окончания мероприятий в общежитии.
     * В интерфейсах все поля автоматически являются public static final.
     * Это время соблюдения тишины и окончания всех активных мероприятий.
     */
    String breakTime = "22:00";

    /**
     * Организует студенческое мероприятие с указанным названием.
     * Метод должен быть реализован для планирования и проведения различных видов мероприятий.
     *
     * @param event название или описание мероприятия (например, "Вечер настольных игр", "Киновечер", "Спортивный турнир")
     */
    void organizeEvent(String event);

    /**
     * Возвращает список запланированных мероприятий.
     * Позволяет получить информацию о предстоящих событиях в общежитии.
     *
     * @return список строк с названиями запланированных мероприятий
     */
    List<String> getPlannedEvent();
}
