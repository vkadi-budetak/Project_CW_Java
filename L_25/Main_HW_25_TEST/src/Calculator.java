/**
 * Интерфейс Calculator определяет контракт для базовых арифметических операций.
 *
 * Почему используется интерфейс:
 * - Определяет четкий контракт для всех типов калькуляторов.
 * - Обеспечивает полиморфизм - можно работать с любым калькулятором через этот интерфейс.
 * - Позволяет множественное наследование (класс может реализовывать несколько интерфейсов).
 * - Гарантирует, что все реализации будут иметь базовые операции
 */


public interface Calculator {
    /**
     * Сложение двух чисел
     * @param a - первое число
     * @param b - второе число
     * @return - результат сложения
     */
    double add(double a, double b);

    /**
     * Вычитание двух чисел
     * @param a - первое число
     * @param b - второе число
     * @return - результат вычитания
     */
    double subtract(double a, double b);

    /**
     * Умножение двух чисел
     * @param a - первый множитель
     * @param b - второй множитель
     * @return - результат умножения
     */
    double multiply(double a, double b);

    /**
     * Деление двух чисел
     * @param a - делимое
     * @param b - делитель
     * @return - результат деления
     */
    double divide(double a, double b);

}
