import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public class BooksDemo {
    public static void main(String[] args) {
        List<Book> books = Arrays.asList(
                new Book("–ú–∞—Å—Ç–µ—Ä –∏ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", "–ú–∏—Ö–∞–∏–ª –ë—É–ª–≥–∞–∫–æ–≤", 1967, 480),
                new Book("–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ", "–§—ë–¥–æ—Ä –î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π", 1866, 672),
                new Book("–¢—Ä–∏ –º—É—à–∫–µ—Ç—ë—Ä–∞", "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –î—é–º–∞", 1844, 752),
                new Book("–¢–∞—Ä–∞—Å –ë—É–ª—å–±–∞", "–ù–∏–∫–æ–ª–∞–π –ì–æ–≥–æ–ª—å", 1842, 240),
                new Book("–ú–∞–ª–µ–Ω—å–∫–∏–π –ø—Ä–∏–Ω—Ü", "–ê–Ω—Ç—É–∞–Ω –¥–µ –°–µ–Ω—Ç-–≠–∫–∑—é–ø–µ—Ä–∏", 1943, 96)
        );

        // –î–æ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
        System.out.println("\n=== –î–æ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ ===");
        printAsList(books);
//        System.out.println("–°–ø–∏—Å–æ–∫ –∫–Ω–∏–≥: \n" + books);

        // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
        Collections.sort(books);

        // –ü–æ—Å–ª–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
        System.out.println("\n=== –ü–æ—Å–ª–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ ===");
        printAsList(books);
//        System.out.println("–°–ø–∏—Å–æ–∫ –∫–Ω–∏–≥: \n" + books);


    }


    private static void printAsList(List<Book> books) {
        for (int i = 0; i < books.size(); i++) {
            System.out.printf("%d) %s%n", i + 1, books.get(i));
        }
    }
}

/**
 * –†–µ–∞–ª–∏–∑–∞—Ü–∏—è Comparable –¥–ª—è –∫–ª–∞—Å—Å–∞ Book
 * üéØ –£—Å–ª–æ–≤–∏–µ:
 * –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Book —Å –ø–æ–ª—è–º–∏:
 * <p>
 * title (String) - –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏
 * author (String) - –∞–≤—Ç–æ—Ä
 * year (int) - –≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è
 * pages (int) - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
 * –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
 * <p>
 * –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Comparable<Book> –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –≥–æ–¥—É –∏–∑–¥–∞–Ω–∏—è (–æ—Ç —Å—Ç–∞—Ä—ã—Ö –∫ –Ω–æ–≤—ã–º)
 * –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –º–µ—Ç–æ–¥—ã equals() –∏ hashCode()
 * –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –º–µ—Ç–æ–¥ toString() –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
 * –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ –∏–∑ 5 –∫–Ω–∏–≥ –∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ —Å –ø–æ–º–æ—â—å—é Arrays.sort()
 * –í—ã–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ –∏ –ø–æ—Å–ª–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
 * üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞:
 * –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Integer.compare(this.year, other.year) –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≥–æ–¥–æ–≤
 * –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç compareTo() - –æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω —Å equals()
 */