import java.util.ArrayList;
import java.util.Iterator;
import java.util.SortedMap;

public class StudentGrades {
    private ArrayList<Integer> grades;

    //–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∑–∞–ø–æ–ª–Ω—è–µ–º –ø—É—Å—Ç–æ–π
    public StudentGrades() {
        grades = new ArrayList<>();
    }

    //–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    public StudentGrades(ArrayList<Integer> grades) {
        this.grades = grades;
    }

    // –º–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏
    public void addGrade(int grade) {
        if (grade >= 1 && grade <= 5) {
            grades.add(grade);
        } else {
            System.out.println("–û—à–∏–±–∫–∞: –æ—Ü–µ–Ω–∫–∞ –±—ã—Ç—å –æ—Ç 1 –¥–æ 5");
        }
    }

    // –º–µ—Ç–æ–¥ —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ü–µ–Ω–æ–∫ (< 3)
    public void removeFailingGrades() {
        Iterator<Integer> iterator = grades.iterator();
        int removedCount = 0;

        while (iterator.hasNext()) {
            Integer grade = iterator.next();
            if (grade <= 2) {
                iterator.remove(); // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∏—Ç–µ—Ä–∞—Ç–æ—Ä
                removedCount++;  // removedCount += 1
                System.out.println("–£–¥–∞–ª—è–µ–º –Ω–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É" + grade);
            }
        }

        System.out.println("–£–¥–∞–ª–µ–Ω–æ –Ω–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ü–µ–Ω–æ–∫: " + removedCount);
    }

    // –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ—Å—á–µ—Ç–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∞–ª–∞
    public double calculateAverage() {
        if (grades.isEmpty()) {
            return 0.0;
        }

        int sum = 0;
        for (Integer grade : grades) {
            sum += grade;
        }
        return (double) sum / grades.size();
    }

    // –ø–æ–¥—Å—á–µ—Ç
    public int quantityGradeByMark(int grade) {
        if (grades.isEmpty()) {
            return 0;
        }

        int total = 0;
        Iterator<Integer> iterator = grades.iterator();

        while (iterator.hasNext()) {
            int currentGrade = iterator.next();
            if (currentGrade == grade) {
                total++;
            }
        }

        return total;
    }


    // –º–µ—Ç–æ–¥ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö –æ—Ü–µ–Ω–æ–∫
    public void getGradeStatistics() {
        System.out.println("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:" + grades.size());
        System.out.println("   - –í—Å–µ–≥–æ –æ—Ü–µ–Ω–æ–∫: " + quantityGradeByMark(5));
        System.out.println("   - –û—Ç–ª–∏—á–Ω—ã—Ö (5): " + quantityGradeByMark(5));
        System.out.println("   - –•–æ—Ä–æ—à–∏—Ö (4): " + quantityGradeByMark(5));
        System.out.println("   - –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö (3): " + quantityGradeByMark(5));
        System.out.println("  - –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: " + calculateAverage());
    }

    public void displayGrades(String message) {
        System.out.println(message + grades);
        System.out.printf("–°—Ä–µ–¥–Ω–∏–π –±–∞–ª: %.2f%n", calculateAverage());
    }
}